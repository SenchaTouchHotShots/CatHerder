/*
 * File: app/view/categoryForm.js
 *
 * This file was generated by Sencha Architect version 2.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('CatHerder.view.categoryForm', {
    extend: 'Ext.form.Panel',
    alias: 'widget.categoryform',

    config: {
        items: [
            {
                xtype: 'container',
                html: 'Please enter a category name below:',
                id: 'categoryText',
                margin: 8,
                style: 'text-align:center;'
            },
            {
                xtype: 'textfield',
                id: 'categoryName',
                label: 'Name'
            },
            {
                xtype: 'hiddenfield',
                id: 'categoryID'
            },
            {
                xtype: 'button',
                margin: 8,
                ui: 'confirm',
                text: 'Save',
                handler: function() {
                    var form = this.up('formpanel');
                    console.log(form);
                    var store = Ext.getStore('categoryStore');
                    var values = form.getValues();
                    if(values.categoryID > 0) {
                        var index = store.find('categoryID', values.categoryID);
                        var record = store.getAt(index);
                        record.set(values);
                    } else {
                        var record = Ext.ModelMgr.create(form.getValues(), 'CatHerder.model.Category');
                    }
                    record.save();
                    var tabs = this.up('tabpanel');
                    var current = tabs.getActiveItem();
                    console.log(current);
                    current.setActiveItem(0);
                }
            },
            {
                xtype: 'button',
                margin: 8,
                ui: 'decline',
                text: 'Cancel',
                handler: function() {
                    var tabs = this.up('tabpanel');
                    var current = tabs.getActiveItem();
                    console.log(current);
                    current.setActiveItem(0);
                }
            }
        ]
    }

});