/*
 * File: app/view/itemList.js
 *
 * This file was generated by Sencha Architect version 2.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('CatHerder.view.itemList', {
    extend: 'Ext.dataview.List',
    alias: 'widget.itemlist',
    config: {
        id: 'itemList',
        itemId: 'mylist',
        store: 'itemStore',
	itemTpl: [
	    '{category.name}: {name}',
	    '<p class="delete hidden" style="position: absolute; right: 10px; top: 12px;">',
 	    '<img src="resources/images/delete.png" alt="delete" />',
 	    '</p>'
	],
        listeners: [
            {
                fn: 'onMyListItemSwipe',
                event: 'itemswipe'
            },
            {
                fn: 'onMylistItemTapHold',
                event: 'itemtaphold'
            },
            {
                fn: 'onMylistItemSingletap',
                event: 'itemsingletap'
            }
        ],
	isDeleting: false
    },
    deleteItem: function(record) {
	Ext.Msg.confirm('Please Confirm', 'Are you sure you want to delete this item?',
			function() {
			    this.delRecord.erase();
			    this.delRecord = false;
			    this.isDeleting = false;
			}, this);
    },

    onMyListItemSwipe: function(dataview, index, target, record) {
	var delBtn = target.down('.delete');
	this.delRecord = record;
	delBtn.on('tap', function(evt) {
	    evt.preventDefault();
	    this.deleteItem();
	}, dataview, {
	    single: true
	});
	delBtn.removeCls('hidden');
	delBtn.addCls('shown');

	if (this.isDeleting) {
	    //Hide other delete button.
	    this.isDeleting.addCls('hidden');
	    this.isDeleting.removeCls('shown');
	    if (this.isDeleting == delBtn) {
		this.isDeleting = false;
		this.delRecord = false;
	    }
	} else {
	    this.isDeleting = delBtn;
	}

	return true;
    },

    onMylistItemTaphold: function(dataview, index, target, record, e, options) {
        console.log('Item Tap Hold');
    },

    onMylistItemSingletap: function(dataview, index, target, record, e, options) {
        console.log('Item Single Tap');
    }

});